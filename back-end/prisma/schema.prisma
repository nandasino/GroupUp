generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  id     Int      @id @default(autoincrement())
  name   String
  events events[]
}

model events {
  id          Int        @id @default(autoincrement())
  userId      Int
  date        DateTime   @db.Date
  hour        String
  isPublic    Boolean
  city        String
  address     String
  categoryId  Int
  vacancies   Int
  description String
  createdAt   DateTime   @default(now()) @db.Timestamp(6)
  categories  categories @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users       users      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  groups      groups[]
}

model friends {
  id                            Int     @id @default(autoincrement())
  userId                        Int
  friendId                      Int
  accepted                      Boolean @default(false)
  users_friends_friendIdTousers users   @relation("friends_friendIdTousers", fields: [friendId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_friends_userIdTousers   users   @relation("friends_userIdTousers", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model groups {
  id      Int    @id @default(autoincrement())
  eventId Int
  userId  Int
  events  events @relation(fields: [eventId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users   users  @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model sessions {
  id     Int     @id @default(autoincrement())
  token  String
  active Boolean @default(true)
  userId Int
  users  users   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id                              Int        @id @default(autoincrement())
  email                           String
  password                        String
  name                            String
  image                           String
  city                            String?
  createdAt                       DateTime   @default(now()) @db.Timestamp(6)
  events                          events[]
  friends_friends_friendIdTousers friends[]  @relation("friends_friendIdTousers")
  friends_friends_userIdTousers   friends[]  @relation("friends_userIdTousers")
  groups                          groups[]
  sessions                        sessions[]
}
